import telebot
from telebot import types
from config import TOKEN
import cash
import parsing

bot = telebot.TeleBot(TOKEN)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–æ–º–∞–Ω–¥—ã '/start' or '/help'.
@bot.message_handler(commands=['start'])
def handle_start(message):
    options_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    opt_mark_button1 = types.KeyboardButton('–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è')
    opt_mark_button2 = types.KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    opt_mark_button3 = types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
    options_markup.add(opt_mark_button1, opt_mark_button2, opt_mark_button3)

    bot.send_sticker(message.chat.id, open('static/join.webp', 'rb'))
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>"
                                      " —É–∑–Ω–∞–≤–∞–Ω–∏—é –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç  üòâ".format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=options_markup)


@bot.message_handler(commands=['add'])
def handle_add(message):
    bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç—É –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:"ils, usd, eur, rub".')


@bot.message_handler(content_types=['text'])
def conversion(message):
    if message.chat.type == 'private':
        try:
            if message.text == '–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è':
                markup = types.InlineKeyboardMarkup(row_width=1)
                for i in cash.get_currency():
                    markup.add(types.InlineKeyboardButton(i[1], callback_data='&' + i[1] + i[0]))  # first currency
                bot.send_message(message.chat.id, '–ò–∑ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?', reply_markup=markup)
                return
            elif message.text == '–ö—É—Ä—Å –≤–∞–ª—é—Ç':
                markup = types.InlineKeyboardMarkup(row_width=1)
                for i in cash.get_currency():
                    markup.add(types.InlineKeyboardButton(i[1], callback_data='(' + i[1] + i[0]))  # first currency
                bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–π –≤–∞–ª—é—Ç–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å?', reply_markup=markup)
            elif message.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è':
                bot.send_message(message.chat.id, '<b>–ß—Ç–æ –∂–µ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?ü§î</b>\n–¢–∞ –≤—Å—ë –æ–±—É—Å–Ω–µ–Ω–æ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö.üòâ\n'
                                                  '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∫—Ä—ã—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–∞–ª—é—Ç –≤ —Å–∏—Å—Ç–µ–º—É,'
                                                  ' –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ—Ç–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫ –ø—Ä–∏–º–µ—Ä—É:'
                                                  ' "usd" –∏–ª–∏ "rub"(–í–∞–ª—é—Ç—ã –Ω–∞—Ö–æ–¥—è—à–∞—è—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –ø–∏—Å–∞—Ç—å)\n'
                                                  '<b>–£–¥–∞—á–∏ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏!</b>üòè', parse_mode='html')
                bot.send_sticker(message.chat.id, open('static/instructions.webp', 'rb'))
            elif 0 < int(message.text): # –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—à–µ –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ—Å–ª–µ –±—É–¥–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
                first, second = cash.get_two_currency(message.chat.id)
                bot.send_message(message.chat.id, str(message.text) + first[:-3].replace('/', ' ')
                                 + second[:-3].replace('/', ' –≤ ') + ' –ø–æ–ª—É—á–∞–µ—Ç—Å—è '
                                 + str(parsing.get_price(first.replace(first[:-3], ''),
                                                         second.replace(second[:-3], ''), message.text)[
                                           0]) + '.')
                return
        except ValueError:
            if len(message.text) == 3:
                if cash.add_currency(message.text):
                    bot.send_message(message.chat.id, '–í–∞–ª—é—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–∞.')
                else:
                    bot.send_message(message.chat.id, '–õ–∏–±–æ —Ç–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –Ω–µ–º–∞–µ –≤ –ø—Ä–∏—Ä–æ–¥–µ –ª–∏–±–æ –æ–Ω–∞ —É–∂–µ –µ—Å—Ç—å.')
            else:
                bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–∏—Ç–µ —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.data[0] == '(':
            callback_values = "–í–∞–ª—é—Ç—ã –Ω–∞—Ö–æ–¥—è—â–∞—è—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ –≤ –ø–µ—Ä–µ–≤–æ–¥–µ –Ω–∞ " + call.data[:-3].replace('(', '') + ':\n'
            count = 1
            for i in parsing.get_values(call.data.replace(call.data[:-3], '')):
                callback_values += str(count) + '. ' + i[1] + ': ' + i[0] + '.\n'
                count += 1
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=callback_values, reply_markup=None)
        elif call.data[0] == '&':  # first currency
            currency = call.data[:-3].replace(call.data[0], '')
            cash.conversion_help(call.data, call.message.chat.id, 1)
            markup = types.InlineKeyboardMarkup(row_width=1)
            for i in cash.get_currency():
                if i[1] != currency:
                    markup.add(types.InlineKeyboardButton(i[1], callback_data='%' + i[1] + i[0]))  # second currency
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ ' + currency + '?', reply_markup=markup)
        elif call.data[0] == '%':
            currency = call.data[:-3].replace(call.data[0], '')
            markup = types.InlineKeyboardMarkup(row_width=2)
            markup.add(types.InlineKeyboardButton('10', callback_data=10),
                       types.InlineKeyboardButton('50', callback_data=50),
                       types.InlineKeyboardButton('100', callback_data=100),
                       types.InlineKeyboardButton('500', callback_data=500),
                       types.InlineKeyboardButton('1000', callback_data=1000))
            # –î–∞ —Ç—É—Ç –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ä–µ–¥–∏—Å —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–ª–∏—á–∏–Ω –±–µ–∑ –≤—Ö–æ–¥–∞ –≤ –∫–æ–¥.
            cash.conversion_help(call.data, call.message.chat.id, 0)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–ó–Ω–∞—á–∏—Ç ' + cash.get_first(call.message.chat.id)[:-3]
                                  .replace(cash.get_first(call.message.chat.id)[0], '') + ' –≤ '
                                       + currency + ', –Ω–æ —Å–∫–æ–ª—å–∫–æ?\n–í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –í–∞—à–µ —á–∏—Å–ª–æ (—Ü–µ–ª–æ–µ).',
                                  reply_markup=markup)
        elif 0 < int(call.data):
            first, second = cash.get_two_currency(call.message.chat.id)
            print(first[:-3].replace('/', ' ')
                  + second[:-3].replace('/', '  '))
            print(second.replace(second[:-3], ''))
            bot.send_message(call.message.chat.id, str(call.data) + first[:-3].replace('/', ' ')
                             + second[:-3].replace('/', ' –≤ ') + ' –ø–æ–ª—É—á–∞–µ—Ç—Å—è '
                             + '–±—É–¥–µ—Ç ' + str(parsing.get_price(first.replace(first[:-3], ''),
                                                                second.replace(second[:-3], ''), call.data)[0]) + '.')
    except ValueError or Exception as e:
        print(repr(e))


@bot.message_handler(content_types=['voice'])
def handle_docs_audio(message: telebot.types.Message):
    bot.send_message(message.chat.id, 'message')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏
@bot.message_handler(content_types=['document', 'audio'])
def handle_docs_audio(message):
    bot.send_message(message.chat.id, 'something')


@bot.message_handler(content_types=['photo'])
def handle_docs_audio(message):
    bot.send_message(message.chat.id, 'nice meme XDD')


bot.polling(none_stop=True)
